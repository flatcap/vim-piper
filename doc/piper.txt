*piper.txt*  Pass text through command-line filters

Author:  Richard Russon (flatcap) <rich@flatcap.org>
License: GPLv3 <http://fsf.org/>

This plugin is only available if 'compatible' is not set.

INTRODUCTION                                    *piper*

Same time by creating mappings for common filtering commands.
e.g. sort, uniq, nl.

COMMANDS                                        *piper-commands*

There are ten commands by default:

  Mnemonic  Command      Description ~
  c         column -t    put data into (C)olumns
  e         uniq -c      (E)numerate (count) the duplicates
  l         nl -nrz -w4  (L)ine numbers
  n         sort -n      (N)umeric sort
  r         rev          (R)everse each line
  s         sort -f      (S)ort lines (fold case)
  t         tac          (T)ac (reverse the file)
  u         uniq         (U)nique (remove duplicate lines)
  x         shuf         mi(X) up the file
  z         cat -s       squee(Z)e blank lines

MAPPINGS                                        *piper-mappings*

Each command has three mappings.
Each mapping begins with cp (remember this as Change using a Pipe), followed
by a letter from the table above: |piper-commands|
For example, the mappings for the "rev" command are:

  Mapping       Description ~
  cpr           Filter region defined by vim {motion} commands
  cprr          Filter the current line
  cpR           Filter the entire file (note the capital letter)

                                                            *cpc*
cpc{motion}     Run command "column -t" on the {motion}
                Effect: Data are put into columns

                                                            *cpcc*
cpcc            Run command "column -t" on the current line
                Effect: Data are put into columns

                                                            *cpC*
cpC             Run command "column -t" on the entire file
                Effect: Data are put into columns

                                                            *cpe*
cpe{motion}     Run command "uniq -c" on the {motion}
                Effect: Duplicate lines are counted

                                                            *cpee*
cpee            Run command "uniq -c" on the current line
                Effect: Duplicate lines are counted

                                                            *cpE*
cpE             Run command "uniq -c" on the entire file
                Effect: Duplicate lines are counted

                                                            *cpl*
cpl{motion}     Run command "nl -nrz -w4" on the {motion}
                Effect: Lines are numbered

                                                            *cpll*
cpll            Run command "nl -nrz -w4" on the current line
                Effect: Lines are numbered

                                                            *cpL*
cpL             Run command "nl -nrz -w4" on the entire file
                Effect: Lines are numbered

                                                            *cpn*
cpn{motion}     Run command "sort -n" on the {motion}
                Effect: Lines are sorted numerically

                                                            *cpnn*
cpnn            Run command "sort -n" on the current line
                Effect: Lines are sorted numerically

                                                            *cpN*
cpN             Run command "sort -n" on the entire file
                Effect: Lines are sorted numerically

                                                            *cpr*
cpr{motion}     Run command "rev" on the {motion}
                Effect: Each line is written backwards

                                                            *cprr*
cprr            Run command "rev" on the current line
                Effect: Each line is written backwards

                                                            *cpR*
cpR             Run command "rev" on the entire file
                Effect: Each line is written backwards

                                                            *cps*
cps{motion}     Run command "sort -f" on the {motion}
                Effect: Lines are sorted (ignoring case)

                                                            *cpss*
cpss            Run command "sort -f" on the current line
                Effect: Lines are sorted (ignoring case)

                                                            *cpS*
cpS             Run command "sort -f" on the entire file
                Effect: Lines are sorted (ignoring case)

                                                            *cpt*
cpt{motion}     Run command "tac" on the {motion}
                Effect: Lines are written in reverse order

                                                            *cptt*
cptt            Run command "tac" on the current line
                Effect: Lines are written in reverse order

                                                            *cpT*
cpT             Run command "tac" on the entire file
                Effect: Lines are written in reverse order

                                                            *cpu*
cpu{motion}     Run command "uniq" on the {motion}
                Effect: Duplicate lines are removed

                                                            *cpuu*
cpuu            Run command "uniq" on the current line
                Effect: Duplicate lines are removed

                                                            *cpU*
cpU             Run command "uniq" on the entire file
                Effect: Duplicate lines are removed

                                                            *cpx*
cpx{motion}     Run command "shuf" on the {motion}
                Effect: Lines are written in a random order

                                                            *cpxx*
cpxx            Run command "shuf" on the current line
                Effect: Lines are written in a random order

                                                            *cpX*
cpX             Run command "shuf" on the entire file
                Effect: Lines are written in a random order

                                                            *cpz*
cpz{motion}     Run command "cat -s" on the {motion}
                Effect: Duplicate blank lines are removed

                                                            *cpzz*
cpzz            Run command "cat -s" on the current line
                Effect: Duplicate blank lines are removed

                                                            *cpZ*
cpZ             Run command "cat -s" on the entire file
                Effect: Duplicate blank lines are removed

CONFIGURATION                                   *piper-configuration*

The pipes are initialised from a vim dictionary.  Here's the default:

    let g:piper_command_list = {
        \ 'c': 'LANG=C column -t',
        \ 'e': 'LANG=C uniq -c',
        \ 'l': 'LANG=C nl -nrz -w4',
        \ 'n': 'LANG=C sort -n',
        \ 'r': 'LANG=C rev',
        \ 's': 'LANG=C sort -f',
        \ 't': 'LANG=C tac',
        \ 'u': 'LANG=C uniq',
        \ 'x': 'LANG=C shuf',
        \ 'z': 'LANG=C cat -s',
    \ }

To add your own command, or change the parameters for an existing command,
copy the script, above, into your .vimrc (before the call to pathogen).

EXAMPLES                                                *piper-examples*

  Type This     Result ~
  cpsip         Current paragraph is sorted
  cpx9j         Ten lines are randomised
  cpL           Add lines numbers to the entire file

ABOUT                                                   *piper-about*

Grab the latest version or report a bug on GitHub:

http://github.com/flatcap/vim-piper

 vim:tw=78:ts=2:sw=2:et:ft=help:norl:
